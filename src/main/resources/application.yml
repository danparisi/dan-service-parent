# Testing properties precedence
test-property: source-dan-service-tech-starter-application-yaml

dan:
  kafka:
    producer:
      enabled: true
      logback: true
      topics:
        logs: dan-service-logs
    consumer:
      enabled: true

spring:
  cloud:
    loadbalancer:
      retry:
        maxRetriesOnNextServiceInstance: 3
    openfeign:
      circuitbreaker:
        enabled: true
      client:
        config:
          default:
            read-timeout: 5000
            connect-timeout: 1000
    kubernetes:
      loadbalancer:
        mode: SERVICE
    consul:
      config:
        format: yaml
        enabled: true
        fail-fast: true
        profileSeparator: '-'
        watch:
          enabled: true
      host: consul-server
      port: 8500
  config:
    import: "optional:consul:${spring.cloud.consul.host}:${spring.cloud.consul.port}/"
  kafka:
    bootstrap-servers: dan-kafka-cluster-kafka-bootstrap:9092
    consumer:
      group-id: ${spring.application.name}

management:
  endpoint:
    env:
      # For testing property values, not safe for PROD
      show-values: ALWAYS
    health:
      show-details: "ALWAYS"
  endpoints:
    web:
      base-path: /
      exposure:
        include: "*"
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://zipkin:9411/api/v2/spans
  metrics:
    distribution:
      percentiles-histogram:
        http.server.requests: true

resilience4j:
  circuitbreaker:
    configs:
      default:
        minimumNumberOfCalls: 3
        failureRateThreshold: 50
  timelimiter:
    configs:
      default:
        timeoutDuration: ${spring.cloud.openfeign.client.config.default.read-timeout}
  retry:
    configs:
      default:
        max-attempts: ${spring.cloud.loadbalancer.retry.maxRetriesOnNextServiceInstance}
        waitDuration: 1ms
        retryExceptions:
          - java.net.ConnectException
          - java.net.UnknownHostException
          - java.net.SocketTimeoutException
          - org.apache.http.NoHttpResponseException
          - org.apache.http.conn.ConnectTimeoutException

logging:
  level:
    io.kubernetes.client: WARN